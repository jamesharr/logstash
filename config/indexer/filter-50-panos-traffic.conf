# Parse PanOS threat logs
# 
# Data comes direclty in from logstash instance
if [type] == "panos" and [message] =~ /,TRAFFIC,/ {
  mutate {
    add_tag => [ "panos", "panos-traffic" ]
    remove_tag => "_unparsed"
  }
  csv {
    columns => [
      "FUTURE_USE",
      "pan_time_recv",
      "pan_serial_no",
      "pan_type",
      "pan_subtype",
      "FUTURE_USE",
      "pan_time_generate",
      "pan_src_ip",
      "pan_dst_ip",
      "pan_nat_src_ip",
      "pan_nat_dst_ip",
      "pan_rule",
      "pan_src_user",
      "pan_dst_user",
      "pan_app",
      "pan_vsys",
      "pan_src_zone",
      "pan_dst_zone",
      "pan_ingress_iface",
      "pan_egress_iface",
      "pan_log_forward_profile",
      "FUTURE_USE",
      "pan_session_id",
      "pan_repeat_count",
      "pan_src_port",
      "pan_dst_port",
      "pan_nat_src_port",
      "pan_nat_dst_port",
      "pan_flags",
      "pan_protocol",
      "pan_action",
      "pan_bytes",
      "pan_bytes_sent",
      "pan_bytes_received",
      "pan_packets",
      "pan_start_time",
      "pan_elapsed_time",
      "pan_category",
      "FUTURE_USE",
      "pan_seqno",
      "pan_action_flags",
      "pan_src_location",
      "pan_dst_location",
      "FUTURE_USE",
      "pan_packets_sent",
      "pan_packets_received"]
  }

  mutate { convert => [ "pan_bytes", "integer" ] }
  mutate { convert => [ "pan_bytes_sent", "integer" ] }
  mutate { convert => [ "pan_bytes_received", "integer" ] }
  mutate { convert => [ "pan_packets", "integer" ] }
  mutate { convert => [ "pan_packets_sent", "integer" ] }
  mutate { convert => [ "pan_packets_received", "integer" ] }

  mutate {
    # Cleanup unused fields
    remove_field => [ "FUTURE_USE" ]
  }
}
