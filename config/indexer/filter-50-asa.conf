# ASA firewall hit message.
# Broken apart for readability.
if [type] == "syslog" and [message] =~ /^%ASA-.-10610[023]: access-list/ {
  mutate {
    add_tag => "firewall"
    remove_tag => "_unparsed"
  }

  grok {
    match => { "message" => "%ASA-.-10610[023]: access-list %{NOTSPACE:[acl]} %{WORD:[action]} %{WORD:[protocol]}" }
  }
  # user name for 106102 and 106103, can be '<unknown>'
  grok {
    match => { "message" => "for user '%{NOTSPACE:[user]}'" }
    tag_on_failure => []
  }
  grok { match => { "message" => "%{NOTSPACE:[src][int]}/%{IPORHOST:[src][host]}\(%{INT:[src][port]}\)(\(%{NOTSPACE:[src][user]}\))? ->" } }
  grok { match => { "message" => "-> %{NOTSPACE:[dst][int]}/%{IPORHOST:[dst][host]}\(%{INT:[dst][port]}\)(\(%{NOTSPACE:[dst][user]}\))? hit-cnt" } }
  grok { match => { "message" => "hit-cnt %{INT:[hits]} (first hit|.*-second interval)" } }
  grok { match => { "message" => "\[%{NOTSPACE:[ace]}, %{NOTSPACE:[ace_exp]}\]" } }

  # Rename ports to codes for ICMP traffic
  if [protocol] == "icmp" {
    mutate { rename => [
      "[src][port]", "type",
      "[dst][port]", "code"
    ] }
  }

  # Look up GeoIP info
  geoip {
    source => "[src][host]"
    target => "[src][geoip]"
  }
  geoip {
    source => "[dst][host]"
    target => "[dst][geoip]"
  }
}
