input {
   stdin {
     type => "syslog"
   }
#  file {
#    type => "syslog"
#    path => ["/Users/james/workspace/logstash/samples/*.log"]
#    sincedb_path => "/dev/null"
#    start_position => "beginning"
#  }
}


filter {
  if [type] == "syslog" {

    # timestamp added by rsyslog
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:ts}%{SPACE}%{GREEDYDATA:message}" }
      overwrite => [ "message" ]
      tag_on_failure => ["_grokparsefailure", "_timefail"]
    }
    date {
      match => [ "ts" , "ISO8601" ]
      remove_field => "ts"
    }

    # hostname added by rsyslog
    grok {
      match => { "message" => "%{HOST:host}%{SPACE}%{GREEDYDATA:message}" }
      overwrite => [ "message", "host" ]
    }
    dns {
      resolve => [ "host" ]
    }

    # Mark as unparsed until we know something is parsed
    noop {
      add_tag => "_unparsed"
    }

    # ASA firewall hit message.
    # Broken apart for readability.
    if [message] =~ /^%ASA-5-106100: access-list/ {
      grok { match => { "message" => "%ASA-5-106100: access-list %{NOTSPACE:[fw][acl]} %{WORD:[fw][action]} %{WORD:[fw][protocol]}" } }
      grok { match => { "message" => "%{NOTSPACE:[src][int]}/%{IPORHOST:[src][host]}\(%{INT:[src][port]}\) -> %{NOTSPACE:[dst][int]}/%{IPORHOST:[dst][host]}\(%{INT:[dst][port]}\)" } }
      grok { match => { "message" => "hit-cnt %{INT:[fw][hits]} (first hit|.*-second interval) \[%{NOTSPACE:[fw][ace]}, %{NOTSPACE:[fw][ace_exp]}\]" } }
      noop {
        add_tag => "firewall"
        remove_tag => "_unparsed"
      }
    }
  }
}

output {
  stdout {
    debug => true
  }
}
